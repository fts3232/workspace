version: "3"
networks:
  backend:
      driver: ${NETWORKS_DRIVER}
  frontend:
      driver: ${NETWORKS_DRIVER}
services:
### NGINX Server #########################################
  nginx:
    build:
      context: ./containers/nginx
    container_name: 'nginx'
    restart: always
    volumes:
      - ${NGINX_WWW_PATH}:/usr/share/nginx/html
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available:ro
      - ${NGINX_CONF_FILE_PATH}:/etc/nginx/nginx.conf:ro
      - ${NGINX_LOG_PATH}:/var/log/nginx
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    networks:
      - frontend
      - backend
    depends_on:
      - php-fpm
  php-fpm:
    build:
      context: ./containers/php-fpm
    container_name: 'php-fpm'
    restart: always
    expose:
      - "9000"
    networks:
      - backend
    volumes:
      - ${PHP_INI_PATH}:/usr/local/etc/php/php.ini:ro
      - ${NGINX_WWW_PATH}:/usr/share/nginx/html
      - ${PHP_FPM_CONF_PATH}:/etc/php-fpm.d:ro
      - ${PHP_FPM_LOG_PATH}:/var/log/php-fpm
      - ${MYSQL_SOCK_PATH}:/var/run/mysqld
  mysql:
    image: 'mysql:5.7'
    container_name: 'mysql'
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${MYSQL_CONF_PATH}:/etc/mysql/my.cnf:ro
      - ${MYSQL_DATA_PATH}:/var/lib/mysql
      - ${MYSQL_LOG_PATH}:/var/log/mysql
      - ${MYSQL_SOCK_PATH}:/var/run/mysqld
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend
  redis:
    build:
      context: ./containers/redis
    container_name: 'redis'
    restart: always
    volumes:
      - ${REDIS_DATA_PATH}:/data
      - ${REDIS_CONF_PATH}:/etc/redis/redis.conf:ro
      - ${REDIS_LOG_PATH}:/var/log/redis
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend
  mongodb:
    build:
        context: ./containers/mongodb
    container_name: 'mongodb'
    restart: always
    volumes:
      - ${MONGODB_DATA_PATH}:/data/db
      - ${MONGODB_LOG_PATH}:/var/log/mongodb
    ports:
      - "${MONGODB_PORT}:27017"
    networks:
      - backend
  fluentd:
    build: ./containers/fluentd
    container_name: 'fluentd'
    volumes:
      - ./containers/fluentd/config:/fluentd/etc
      - ./logs:/var/log
    networks:
      - backend