(function(window) { let svgSprite = '<svg><symbol id="icon-menu" viewBox="0 0 1024 1024"><path d="M79.169331 113.350554l121.006899 0 0 120.557773-121.006899 0 0-120.557773ZM324.965581 113.350554l647.967334 0 0 120.557773-647.967334 0 0-120.557773ZM79.169331 444.549837l121.006899 0 0 120.557773-121.006899 0 0-120.557773ZM324.965581 444.549837l647.967334 0 0 120.557773-647.967334 0 0-120.557773ZM79.169331 754.840781l121.006899 0 0 120.334643-121.006899 0 0-120.334643ZM324.965581 754.840781l647.967334 0 0 120.334643-647.967334 0 0-120.334643Z"  ></path></symbol></svg>';const script = function() { const scripts = document.getElementsByTagName('script');return scripts[scripts.length - 1]; }();const shouldInjectCss = script.getAttribute('data-injectcss');const ready = function(fn) { if (document.addEventListener) { if (~['complete', 'loaded', 'interactive'].indexOf(document.readyState)) { setTimeout(fn, 0); } else { var loadFn = function() { document.removeEventListener('DOMContentLoaded', loadFn, false);fn(); };document.addEventListener('DOMContentLoaded', loadFn, false); } } else if (document.attachEvent) { IEContentLoaded(window, fn); } function IEContentLoaded(w, fn) { const d = w.document; let done = false; const init = function() { if (!done) { done = true;fn(); } };var polling = function() { try { d.documentElement.doScroll('left'); } catch (e) { setTimeout(polling, 50);return; }init(); };polling();d.onreadystatechange = function() { if (d.readyState == 'complete') { d.onreadystatechange = null;init(); } }; } };const before = function(el, target) { target.parentNode.insertBefore(el, target); };const prepend = function(el, target) { if (target.firstChild) { before(el, target.firstChild); } else { target.appendChild(el); } };function appendSvg() { let div; let svg;div = document.createElement('div');div.innerHTML = svgSprite;svgSprite = null;svg = div.getElementsByTagName('svg')[0];if (svg) { svg.setAttribute('aria-hidden', 'true');svg.style.position = 'absolute';svg.style.width = 0;svg.style.height = 0;svg.style.overflow = 'hidden';prepend(svg, document.body); } } if (shouldInjectCss && !window.__iconfont__svg__cssinject__) { window.__iconfont__svg__cssinject__ = true;try { document.write('<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>'); } catch (e) { console && console.log(e); } }ready(appendSvg); })(window);